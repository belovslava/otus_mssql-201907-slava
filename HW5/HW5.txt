

--HW 5
use [WideWorldImporters]

--1. Посчитать среднюю цену товара, общую сумму продажи по месяцам
select 
[Description],
	month (o.[OrderDate]) as mounth,
	avg ([UnitPrice]) as avg_price,
	sum ([Quantity] * [UnitPrice]) as summa
from [Sales].[OrderLines] ol
	join [Sales].[Orders] o on ol.[OrderID] = o.[OrderID]
	join [Sales].[Orders] o on ol.[OrderID] = o.[OrderID]
group by [Description],month ([OrderDate]) 
order by [Description],mounth

--2. Отобразить все месяцы, где общая сумма продаж превысила 10 000 

select distinct
	month (o.[OrderDate]) as mounth,
	year (o.[OrderDate]) as years,
	sum ([Quantity] * [UnitPrice]) as summa
from [Sales].[OrderLines] ol
	join [Sales].[Orders] o on ol.[OrderID] = o.[OrderID]
group by [Description],month ([OrderDate]),year (o.[OrderDate]) 
having sum ([Quantity] * [UnitPrice]) > 10000

--3. Вывести сумму продаж, дату первой продажи и количество проданного по месяцам, по товарам, продажи которых менее 50 ед в месяц. 

select 
	month (o.[OrderDate]) as mounth,
	year (o.[OrderDate]) as years,
	sum (ol.[Quantity] * ol.[UnitPrice]) as summa,
	min (o.[OrderDate]) as min_date_order,
	w.[StockItemName] as StockItemName,
	count (ol.[Quantity]) as kol_vo
from [Sales].[OrderLines] ol
	join [Sales].[Orders] o on ol.[OrderID] = o.[OrderID]
	join [Warehouse].[StockItems] w on w.StockItemID = ol.StockItemID
group by year (o.[OrderDate]),month (o.[OrderDate]),[StockItemName]
having sum (Quantity) < 50
order by year (o.[OrderDate]),month (o.[OrderDate]),[StockItemName]

--4. 

drop table dbo.MyEmployees 
CREATE TABLE dbo.MyEmployees 
( 
EmployeeID smallint NOT NULL, 
FirstName nvarchar(30) NOT NULL, 
LastName nvarchar(40) NOT NULL, 
Title nvarchar(50) NOT NULL, 
DeptID smallint NOT NULL, 
ManagerID int NULL, 
CONSTRAINT PK_EmployeeID PRIMARY KEY CLUSTERED (EmployeeID ASC) 
); 
INSERT INTO dbo.MyEmployees VALUES 
(1, N'Ken', N'Sánchez', N'Chief Executive Officer',16,NULL) 
,(273, N'Brian', N'Welcker', N'Vice President of Sales',3,1) 
,(274, N'Stephen', N'Jiang', N'North American Sales Manager',3,273) 
,(275, N'Michael', N'Blythe', N'Sales Representative',3,274) 
,(276, N'Linda', N'Mitchell', N'Sales Representative',3,274) 
,(285, N'Syed', N'Abbas', N'Pacific Sales Manager',3,273) 
,(286, N'Lynn', N'Tsoflias', N'Sales Representative',3,285) 
,(16, N'David',N'Bradley', N'Marketing Manager', 4, 273) 
,(23, N'Mary', N'Gibson', N'Marketing Specialist', 4, 16); 

Результат вывода рекурсивного CTE:
EmployeeID Name Title EmployeeLevel
1	Ken Sánchez	Chief Executive Officer	1
273	| Brian Welcker	Vice President of Sales	2
16	| | David Bradley	Marketing Manager	3
23	| | | Mary Gibson	Marketing Specialist	4
274	| | Stephen Jiang	North American Sales Manager	3
276	| | | Linda Mitchell	Sales Representative	4
275	| | | Michael Blythe	Sales Representative	4
285	| | Syed Abbas	Pacific Sales Manager	3
286	| | | Lynn Tsoflias	Sales Representative	4

--Решение

WITH DirectReports (EmployeeID, FirstName,LastName, Title, ManagerID, EmployeeLevel ) AS   
(  
    SELECT EmployeeID, FirstName,LastName, Title, ManagerID,  1 AS EmployeeLevel  
    FROM dbo.MyEmployees   
    WHERE ManagerID IS NULL  
    UNION ALL  
    SELECT e.EmployeeID, e.FirstName,e.LastName, e.Title, e.ManagerID, EmployeeLevel + 1 
    FROM dbo.MyEmployees AS e  
        INNER JOIN DirectReports AS d  
        ON e.ManagerID = d.EmployeeID   
)  
SELECT  EmployeeID, concat (FirstName,' ',LastName) as [Name], Title, EmployeeLevel
FROM DirectReports  
ORDER BY  EmployeeID, concat (FirstName,' ',LastName), Title, EmployeeLevel