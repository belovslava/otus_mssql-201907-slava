

-- HW № 3
use [WideWorldImporters]

--1. Выберите сотрудников, которые являются продажниками, и еще не сделали ни одной продажи.
--VERSIA № 1
select  
	   [PersonID]
      ,[FullName]
	  ,[IsSalesperson]
 from [Application].[People] as A
 where [IsSalesperson] NOT IN (select distinct [SalespersonPersonID] from [Sales].[Invoices])
 and [IsSalesperson] = 1;
  
  --VERSIA № 2
with A as (select distinct [SalespersonPersonID] from [Sales].[Invoices])
select 
	   [PersonID]
      ,[FullName]
	  ,[IsSalesperson]
  from [Application].[People] AS B
  where B.[IsSalesperson]  NOT IN (select * from A)
  and  [IsSalesperson] = 1;
  
   --2. Выберите товары с минимальной ценой (подзапросом), 2 варианта подзапроса.  
--VERSIA № 1
	select 
	[StockItemName]
	from [Warehouse].[StockItems] 
	where [UnitPrice] in (select min ([UnitPrice]) from [Warehouse].[StockItems])

--VERSIA № 2
	select 
		[StockItemName]
	from [Warehouse].[StockItems] t2
	group by [StockItemName]
	having min ([UnitPrice])  = (select  min ([UnitPrice]) from [Warehouse].[StockItems])
	
--3. Выберите информацию по клиентам, которые перевели компании 5 максимальных платежей из [Sales].[CustomerTransactions] 
--представьте 3 способа (в том числе с CTE)

--VERSIA № 1
 select distinct
	c.CustomerID, 
	c.CustomerName
from [Sales].[Customers] c
where c.CustomerID in (select top (5) CustomerID from [Sales].[CustomerTransactions] order by [TransactionAmount] desc)

--VERSIA № 2
  select distinct
	c.CustomerID, 
	c.CustomerName
  from [Sales].[CustomerTransactions] ct
  join [Sales].[Customers] c on c.CustomerID  = ct.CustomerID 
  where [TransactionAmount] in (select top (5) [TransactionAmount] from [Sales].[CustomerTransactions] order by [TransactionAmount] desc);
   
  --VERSIA № 3
with tmp (CustomerID) as
(
select top (5)
	ct.CustomerID
from [Sales].[CustomerTransactions] ct
order by [TransactionAmount] desc
	 )
select c.CustomerID,c.CustomerName from [Sales].[Customers] c
join tmp  on c.CustomerID = tmp.CustomerID


  --4.Выберите города (ид и название), в которые были доставлены товары, входящие в тройку самых дорогих товаров, а также Имя сотрудника, 
  --который осуществлял упаковку заказов
 
 select distinct
	cit.CityID, 
	cit.CityName, 
	p.FullName,
	il.UnitPrice 
from [Sales].[Invoices] si
	join [Sales].[InvoiceLines] il on si.InvoiceID = il.InvoiceID
	join [Application].[People] p on PackedByPersonID = p.PersonID
	join [Sales].[Customers] cus on si.CustomerID = cus.CustomerID
	join [Application].[Cities] cit on cit.CityID = cus.DeliveryCityID
where il.UnitPrice in (select top (3) UnitPrice from [Warehouse].[StockItems] order by UnitPrice desc)

 
--5. Объясните, что делает и оптимизируйте запрос:
SELECT 
Invoices.InvoiceID, 
Invoices.InvoiceDate,
(SELECT People.FullName
FROM Application.People
WHERE People.PersonID = Invoices.SalespersonPersonID
) AS SalesPersonName,
SalesTotals.TotalSumm AS TotalSummByInvoice, 
(SELECT SUM(OrderLines.PickedQuantity*OrderLines.UnitPrice)
FROM Sales.OrderLines
WHERE OrderLines.OrderId = (SELECT Orders.OrderId 
FROM Sales.Orders
WHERE Orders.PickingCompletedWhen IS NOT NULL	
AND Orders.OrderId = Invoices.OrderId)	
) AS TotalSummForPickedItems
FROM Sales.Invoices 
JOIN
(SELECT InvoiceId, SUM(Quantity*UnitPrice) AS TotalSumm
FROM Sales.InvoiceLines
GROUP BY InvoiceId
HAVING SUM(Quantity*UnitPrice) > 27000) AS SalesTotals
ON Invoices.InvoiceID = SalesTotals.InvoiceID
ORDER BY TotalSumm DESC

--Запрос вытащит дату продажи, ID заказа, ФИО продавца сумма продаж которых превысила 27 тыс. у.е.
--Считаю, что для оптимизации запроса и упрощения чтения запроса необходимо уйти от множества подзапросов путем ввода временных таблиц (into # либо @)


